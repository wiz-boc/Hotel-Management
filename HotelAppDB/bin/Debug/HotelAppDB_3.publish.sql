/*
Deployment script for HotelAppDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "HotelAppDB"
:setvar DefaultFilePrefix "HotelAppDB"
:setvar DefaultDataPath "C:\Users\kenroyg\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\kenroyg\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [dbo].[Bookings]...';


GO
ALTER TABLE [dbo].[Bookings] DROP CONSTRAINT [DF__Bookings__CheckI__29572725];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Bookings_Rooms]...';


GO
ALTER TABLE [dbo].[Bookings] DROP CONSTRAINT [FK_Bookings_Rooms];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Bookings_Guests]...';


GO
ALTER TABLE [dbo].[Bookings] DROP CONSTRAINT [FK_Bookings_Guests];


GO
PRINT N'Starting rebuilding table [dbo].[Bookings]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Bookings] (
    [Id]        INT   IDENTITY (1, 1) NOT NULL,
    [RoomId]    INT   NOT NULL,
    [GuestId]   INT   NOT NULL,
    [StartDate] DATE  NOT NULL,
    [EndDate]   DATE  NOT NULL,
    [CheckIn]   BIT   DEFAULT 0 NOT NULL,
    [TotalCost] MONEY NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Bookings])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Bookings] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Bookings] ([Id], [RoomId], [GuestId], [StartDate], [EndDate], [CheckIn], [TotalCost])
        SELECT   [Id],
                 [RoomId],
                 [GuestId],
                 [StartDate],
                 [EndDate],
                 [CheckIn],
                 [TotalCost]
        FROM     [dbo].[Bookings]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Bookings] OFF;
    END

DROP TABLE [dbo].[Bookings];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Bookings]', N'Bookings';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Bookings_Rooms]...';


GO
ALTER TABLE [dbo].[Bookings] WITH NOCHECK
    ADD CONSTRAINT [FK_Bookings_Rooms] FOREIGN KEY ([RoomId]) REFERENCES [dbo].[Rooms] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Bookings_Guests]...';


GO
ALTER TABLE [dbo].[Bookings] WITH NOCHECK
    ADD CONSTRAINT [FK_Bookings_Guests] FOREIGN KEY ([GuestId]) REFERENCES [dbo].[Guests] ([Id]);


GO
PRINT N'Creating Procedure [dbo].[spRoomTypes_GetAvailableTypes]...';


GO
CREATE PROCEDURE [dbo].[spRoomTypes_GetAvailableTypes]
	@startDate date,
	@endDate date
AS
begin
	set nocount on;

	SELECT t.Id, t.Title,t.Description,t.Price
	FROM dbo.Rooms r
	inner join dbo.RoomTypes t ON t.Id = r.RoomTypeId
	WHERE r.Id not in (
	SELECT b.RoomId
	FROM dbo.Bookings b
	WHERE (@startDate < b.StartDate and @endDate > b.EndDate) OR (b.StartDate <= @endDate and @endDate < b.EndDate ) OR (b.StartDate <= @startDate and @startDate < b.EndDate )
	)
	GROUP BY t.Id, t.Title,t.Description,t.Price

end
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

if not exists(select 1 from dbo.RoomTypes)
begin
    insert into dbo.RoomTypes(Title, Description, Price)
    values('King Size Bed','A room with a king-size bed and a window.',100),
    ('Two Queen Size Beds','A room with two queen-size beds and a window.',115),
    ('Executive Suite','Two rooms, each with a king size bed and a window.',205)
end


if not exists(select 1 from dbo.Rooms)
begin

declare @roomId1 int;
declare @roomId2 int;
declare @roomId3 int;

select @roomId1 = Id from dbo.RoomTypes where Title = 'King Size Bed'
select @roomId2 = Id from dbo.RoomTypes where Title = 'Two Queen Size Beds'
select @roomId3 = Id from dbo.RoomTypes where Title = 'Executive Suite'

insert into dbo.Rooms(RoomNumber,RoomTypeId)
values('001',@roomId1),
('002',@roomId2),
('003',@roomId2),
('004',@roomId3),
('101',@roomId3),
('102',@roomId3),
('204',@roomId1)
end
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Bookings] WITH CHECK CHECK CONSTRAINT [FK_Bookings_Rooms];

ALTER TABLE [dbo].[Bookings] WITH CHECK CHECK CONSTRAINT [FK_Bookings_Guests];


GO
PRINT N'Update complete.';


GO
